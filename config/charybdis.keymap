#include "layers.conf"
#include "macros.conf"
#include "combos.conf"
#include <dt-bindings/zmk/mouse.h>
#include <input/processors.dtsi>
#include <dt-bindings/zmk/input_transform.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    trackball_listener {
        compatible = "zmk,input-listener";
        device = <&trackball_split>;

        snipe {
            layers = <SNIPE>;
            input-processors = <&zip_xy_scaler 1 3>;
        };

        scroll {
            layers = <SCROLL>;
            input-processors =
                <&zip_xy_scaler 1 3>,
                <&zip_xy_to_scroll_mapper>,
                <&zip_scroll_transform (INPUT_TRANSFORM_Y_INVERT)>;
        };
    };

    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        kp_sl: behavior_kp_sl {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <200>;
            bindings = <&sl>, <&kp>;
        };

        ht: behavior_hold_tap_key {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <200>;
            bindings = <&kp>, <&kp>;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        settings_trigger {
            if-layers = <1 2>;
            then-layer = <6>;
        };
    };

    combos {
        compatible = "zmk,combos";

        LH.Lclick {
            bindings = <&mkp LCLK>;
            key-positions = <23 22>;
        };

        Select_All {
            bindings = <&kp LC(A)>;
            key-positions = <1 0>;
        };

        LH.Rclick {
            bindings = <&mkp MB2>;
            key-positions = <22 21>;
        };

        LH.Mclick {
            bindings = <&mkp MCLK>;
            key-positions = <21 22 23>;
        };

        Alt_F4 {
            bindings = <&kp LA(F4)>;
            key-positions = <12 13>;
            layers = <2>;
        };

        Caps {
            bindings = <&kp CAPS>;
            key-positions = <23 31>;
            layers = <0>;
        };

        OSM_LSft {
            bindings = <&sk LSHFT>;
            key-positions = <28 29>;
            timeout-ms = <1000>;
            layers = <0>;
        };
    };

    macros {
        Debug_FMT: Debug_FMT {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_BRACE &kp COLON &kp QMARK &kp RBRC>;
            label = "DEBUG_FMT";
        };

        debug_FMT_pretty: debug_FMT_pretty {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_BRACE &kp COLON &kp POUND &kp QMARK &kp RBRC>;
            label = "DEBUG_FMT_PRETTY";
        };

        derive_macro: derive {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp POUND &kp LBKT &kp D &kp E &kp R &kp I &kp V &kp E &kp LPAR &kp RPAR &kp RIGHT_BRACKET &kp LEFT &kp LEFT>;
            label = "DERIVE";
        };

        component_macro: component_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp POUND &kp LBKT &kp C &kp O &kp M &kp P &kp O &kp N &kp E &kp N &kp T &kp RIGHT_BRACKET &kp RETURN>;
            label = "COMPONENT_MACRO";
        };

        lt_eq: lt_eq {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LT &kp EQUAL &kp SPACE>;
            label = "LT_EQ";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base_layer {
            display-name = "Alpha";
            bindings = <
  &kp Q               &kp W           &kp E           &kp R            &kp T        &ht DELETE Y    &kp U              &kp I            &kp O            &kp P
  &hm LEFT_CONTROL A  &hm LEFT_GUI S  &hm LEFT_ALT D  &hm LCTRL F      &kp G        &ht HOME H      &hm RIGHT_SHIFT J  &hm RIGHT_ALT K  &hm RIGHT_GUI L  &ht SEMI APOS
  &mt LC(Z) Z         &mt LC(X) X     &mt LC(C) C     &mt LC(V) C      &kp B        &ht END N       &kp M              &kp COMMA        &kp PERIOD       &lt 7 SLASH
                                      &to 7           &lt 2 BACKSPACE  &lt 4 TAB    &ht ESCAPE RET  &lt 1 SPACE
            >;
        };

        sym_layer {
            display-name = "SYM";
            bindings = <
  &kp EXCL   &kp AT      &kp LEFT_PARENTHESIS  &kp LEFT_BRACKET  &kp LEFT_BRACE    &kp RIGHT_BRACE  &kp RIGHT_BRACKET    &kp RIGHT_PARENTHESIS  &kp PERCENT  &kp EQUAL
  &kp LCTRL  &kp DOLLAR  &kp UNDERSCORE        &kp LSHFT         &kp STAR          &kp PAGE_UP      &kp LEFT             &kp DOWN               &kp UP       &kp RIGHT
  &kp HASH   &kp CARET   &kp PLUS              &kp AMPS          &kp PIPE          &kp PAGE_DOWN    &kp LA(PRINTSCREEN)  &trans                 &kp TILDE    &ht PAUSE_BREAK QMARK
                         &key_repeat           &trans            &trans            &trans           &trans
            >;
        };

        fun_layer {
            display-name = "FUN";
            bindings = <
  &kp NUMBER_1  &kp NUMBER_2     &kp NUMBER_3     &kp NUMBER_4  &kp N5     &kp NUMBER_6   &kp N7     &kp N8     &kp N9  &kp N0
  &hm LCTRL F1  &hm LEFT_GUI F2  &hm LEFT_ALT F3  &hm LSHFT F4  &kp F5     &kp F6         &kp F7     &kp F8     &kp F9  &kp F10
  &kp LC(Z)     &kp LC(X)        &kp LC(C)        &kp LC(V)     &kp F11    &kp F12        &kp COLON  &kp SLASH  &trans  &ht PAUSE_BREAK MINUS
                                 &trans           &trans        &trans     &kp BACKSPACE  &kp RET
            >;
        };

        prog_sym_layer {
            display-name = "Prog Sym";
            bindings = <
  &DBL_EQL  &TRPL_EQL  &NOT_EQL       &GT_EQL           &lt_eq               &trans  &LOG_AND   &LOG_OR    &INCLUDE    &trans
  &PRN      &BRC       &BKT           &ANGL             &Debug_FMT           &trans  &ARROW_OP  &ARROW_FN  &DBL_QT     &trans
  &DEC      &INC       &derive_macro  &component_macro  &debug_FMT_pretty    &trans  &LSFT_OP   &RSFT_OP   &UPROPERTY  &UFUNCTION
                       &trans         &trans            &trans               &trans  &trans
            >;
        };

        numfn_layer {
            display-name = "Num/FN";
            bindings = <
  &kp F9  &kp F10  &kp F11  &kp F12  &trans            &kp SLASH  &kp N7  &kp N8  &kp N9  &kp MINUS
  &kp F5  &kp F6   &kp F7   &kp F8   &trans            &kp STAR   &kp N4  &kp N5  &kp N6  &kp PLUS
  &kp F1  &kp F2   &kp F3   &kp F4   &kp KP_NUMLOCK    &trans     &kp N1  &kp N2  &kp N3  &kp EQUAL
                   &trans   &trans   &trans            &kp N0     &trans
            >;
        };

        util_layer {
            display-name = "Util";
            bindings = <
  &trans  &trans         &kp KP_NUMLOCK  &trans  &trans    &trans  &trans  &trans  &trans  &trans
  &trans  &trans         &trans          &trans  &trans    &trans  &trans  &trans  &trans  &trans
  &trans  &kp LG(LS(S))  &kp DEL         &trans  &trans    &trans  &trans  &trans  &trans  &trans
                         &trans          &trans  &trans    &trans  &trans
            >;
        };

        settings_layer {
            display-name = "Settings";
            bindings = <
  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4      &bootloader  &trans          &kp K_SLEEP  &kp C_SLEEP_MODE  &kp C_SLEEP
  &trans        &trans        &trans        &out OUT_TOG  &bt BT_CLR_ALL    &sys_reset   &trans          &trans       &trans            &trans
  &trans        &trans        &trans        &trans        &bt BT_CLR        &trans       &studio_unlock  &trans       &trans            &trans
                              &trans        &trans        &trans            &trans       &trans
            >;
        };

        mouse_layer {
            display-name = "Mouse";
            bindings = <
  &trans      &trans        &trans           &trans            &trans    &trans  &trans     &trans     &trans    &trans
  &kp C_MUTE  &kp C_VOL_DN  &kp C_VOLUME_UP  &kp C_PLAY_PAUSE  &trans    &trans  &mkp LCLK  &mkp RCLK  &trans    &trans
  &sl 9       &mo 8         &kp C_PREV       &kp C_NEXT        &trans    &trans  &mkp MCLK  &mkp MB4   &mkp MB5  &trans
                            &to 0            &trans            &trans    &trans  &trans
            >;
        };

        scroll_layer {
            display-name = "Scroll";
            bindings = <
  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
                  &trans  &trans  &trans    &trans  &trans
            >;
        };

        snipe_layer {
            display-name = "Snipe";
            bindings = <
  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
                  &trans  &trans  &trans    &trans  &trans
            >;
        };
    };
};
